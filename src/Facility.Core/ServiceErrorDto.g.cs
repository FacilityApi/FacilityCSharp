// <auto-generated>
// DO NOT EDIT: generated by fsdgencsharp
// </auto-generated>
#nullable enable
using System;
using System.Collections.Generic;

namespace Facility.Core
{
	/// <summary>
	/// An error.
	/// </summary>
	[System.CodeDom.Compiler.GeneratedCode("fsdgencsharp", "")]
	public sealed partial class ServiceErrorDto : ServiceDto<ServiceErrorDto>
	{
		/// <summary>
		/// Creates an instance.
		/// </summary>
		public ServiceErrorDto()
		{
		}

		/// <summary>
		/// The error code.
		/// </summary>
		public string? Code { get; set; }

		/// <summary>
		/// The error message.
		/// </summary>
		public string? Message { get; set; }

		/// <summary>
		/// Advanced error details.
		/// </summary>
		[Newtonsoft.Json.JsonProperty("details")]
		[System.Text.Json.Serialization.JsonPropertyName("details")]
		public ServiceObject? DetailsObject { get; set; }

		/// <summary>
		/// The inner error.
		/// </summary>
		public ServiceErrorDto? InnerError { get; set; }

		/// <summary>
		/// Returns the DTO as JSON.
		/// </summary>
		public override string ToString() => SystemTextJsonServiceSerializer.Instance.ToString(this);

		/// <summary>
		/// Determines if two DTOs are equivalent.
		/// </summary>
		public override bool IsEquivalentTo(ServiceErrorDto? other)
		{
			return other != null &&
				Code == other.Code &&
				Message == other.Message &&
				ServiceDataUtility.AreEquivalentObjects(DetailsObject, other.DetailsObject) &&
				ServiceDataUtility.AreEquivalentDtos(InnerError, other.InnerError);
		}
	}
}
