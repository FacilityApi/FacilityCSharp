// <auto-generated>
// DO NOT EDIT: generated by fsdgencsharp
// </auto-generated>
#nullable enable
using System;
using System.Collections.Generic;
using Facility.Core;
using Facility.Core.MessagePack;

namespace Facility.ConformanceApi
{
	/// <summary>
	/// Response for GetExternalWidget.
	/// </summary>
	[System.CodeDom.Compiler.GeneratedCode("fsdgencsharp", "")]
	[MessagePack.MessagePackObject]
	public sealed partial class GetExternalWidgetResponseDto : ServiceDto<GetExternalWidgetResponseDto>
	{
		/// <summary>
		/// Creates an instance.
		/// </summary>
		public GetExternalWidgetResponseDto()
		{
		}

		/// <summary>
		/// The requested external widget.
		/// </summary>
		[MessagePack.Key("externalWidget")]
		public Facility.ConformanceApi.External.TestExternalDto? ExternalWidget { get; set; }

		/// <summary>
		/// The ETag of the external widget.
		/// </summary>
		[MessagePack.Key("eTag")]
		public string? ETag { get; set; }

		/// <summary>
		/// The external widget still has the specified ETag.
		/// </summary>
		[MessagePack.Key("notModified")]
		public bool? NotModified { get; set; }

		/// <summary>
		/// Returns the DTO as JSON.
		/// </summary>
		public override string ToString() => SystemTextJsonServiceSerializer.Instance.ToJson(this);

		/// <summary>
		/// Determines if two DTOs are equivalent.
		/// </summary>
		public override bool IsEquivalentTo(GetExternalWidgetResponseDto? other)
		{
			return other != null &&
				ServiceDataUtility.AreEquivalentDtos(ExternalWidget, other.ExternalWidget) &&
				ETag == other.ETag &&
				NotModified == other.NotModified;
		}
	}
}
