// <auto-generated>
// DO NOT EDIT: generated by fsdgencsharp
// </auto-generated>
#nullable enable
using System;
using System.Collections.Generic;
using Facility.Core;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;

namespace Facility.ConformanceApi
{
	/// <summary>
	/// A widget.
	/// </summary>
	[System.CodeDom.Compiler.GeneratedCode("fsdgencsharp", "")]
	public sealed partial class WidgetDto : ServiceDto<WidgetDto>
	{
		/// <summary>
		/// Creates an instance.
		/// </summary>
		public WidgetDto()
		{
		}

		/// <summary>
		/// A unique identifier for the widget.
		/// </summary>
		public int? Id { get; set; }

		/// <summary>
		/// The name of the widget.
		/// </summary>
		public string? Name { get; set; }

		/// <summary>
		/// Determines if two DTOs are equivalent.
		/// </summary>
		public override bool IsEquivalentTo(WidgetDto? other)
		{
			return other != null &&
				Id == other.Id &&
				Name == other.Name;
		}

		/// <summary>
		/// Validates the DTO.
		/// </summary>
		public override bool Validate(out string? errorMessage)
		{
			errorMessage = GetValidationErrorMessage();
			return errorMessage == null;
		}

		private string? GetValidationErrorMessage()
		{
			if (Name == null)
				return ServiceDataUtility.GetRequiredFieldErrorMessage("name");

			return null;
		}
	}
}
