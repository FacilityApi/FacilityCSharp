// <auto-generated>
// DO NOT EDIT: generated by fsdgencsharp
// </auto-generated>
#nullable enable
using System;
using System.Collections.Generic;
using Facility.Core;
using Facility.Core.MessagePack;

namespace Facility.ConformanceApi
{
	/// <summary>
	/// Response for CreateExternalWidget.
	/// </summary>
	[System.CodeDom.Compiler.GeneratedCode("fsdgencsharp", "")]
	[MessagePack.MessagePackObject]
	public sealed partial class CreateExternalWidgetResponseDto : ServiceDto<CreateExternalWidgetResponseDto>
	{
		/// <summary>
		/// Creates an instance.
		/// </summary>
		public CreateExternalWidgetResponseDto()
		{
		}

		/// <summary>
		/// The created external widget.
		/// </summary>
		[MessagePack.Key("externalWidget")]
		public Facility.ConformanceApi.External.TestExternalDto? ExternalWidget { get; set; }

		/// <summary>
		/// The URL of the created external widget.
		/// </summary>
		[MessagePack.Key("url")]
		public string? Url { get; set; }

		/// <summary>
		/// The ETag of the created external widget.
		/// </summary>
		[MessagePack.Key("eTag")]
		public string? ETag { get; set; }

		/// <summary>
		/// Returns the DTO as JSON.
		/// </summary>
		public override string ToString() => SystemTextJsonServiceSerializer.Instance.ToJson(this);

		/// <summary>
		/// Determines if two DTOs are equivalent.
		/// </summary>
		public override bool IsEquivalentTo(CreateExternalWidgetResponseDto? other)
		{
			return other != null &&
				ServiceDataUtility.AreEquivalentDtos(ExternalWidget, other.ExternalWidget) &&
				Url == other.Url &&
				ETag == other.ETag;
		}
	}
}
